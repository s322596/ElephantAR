import Long from "long";
import _m0 from "protobufjs/minimal";
export const protobufPackage = "snapchat.cdp.cof";
function createBaseBillboardSignals() {
    return {
        emailVerified: false,
        phoneVerified: false,
        notificationPermGranted: false,
        contactPermGranted: false,
        mutualFriendsCount: 0,
        groupsCount: 0,
        hasNonTeamSnapchatConversations: false,
        emailSet: false,
        bitmojiSet: false,
        hasAddFriendsRequest: false,
        appLaunchFromPush: false,
        appLaunchType: 0,
        campaignLocalImpressionCount: 0,
        campaignLocalLastImpressionTimeSecsToNow: "0",
        campaignLocalContinuousDismissCount: 0,
        fstNumInAppWarnings: 0,
        fstShouldChangePassword: false,
        audioRecordPermGranted: false,
        mutualFriendsWithBirthdayCount: 0,
        campaignLocalDismissCount: 0,
        memoriesCount: 0,
        campaignLocalFirstImpressionTimeSecsToNow: "0",
        campaignLocalClickCount: 0,
        campaignLocalInteractionCount: 0,
        campaignLocalLastInteractionTimeSecsToNow: "0",
        lockScreenWidgetAppOpenFromPush: false,
        communityCount: 0,
        campaignLocalFirstClickTimeSecsToNow: "0",
        campaignLocalLastClickTimeSecsToNow: "0",
        campaignLocalFirstDismissTimeSecsToNow: "0",
        campaignLocalLastDismissTimeSecsToNow: "0",
        campaignLocalFirstInteractionTimeSecsToNow: "0",
        serverImpressionCount: 0,
        serverClickCount: 0,
        serverDismissCount: 0,
        serverInteractionCount: 0,
        serverFirstImpressionTimeSecsToNow: "0",
        serverLastImpressionTimeSecsToNow: "0",
        serverFirstClickTimeSecsToNow: "0",
        serverLastClickTimeSecsToNow: "0",
        serverFirstDismissTimeSecsToNow: "0",
        serverLastDismissTimeSecsToNow: "0",
        serverFirstInteractionTimeSecsToNow: "0",
        serverLastInteractionTimeSecsToNow: "0",
        serverContinuousDismissCount: 0,
        contactPermOsGranted: false,
        contactPermUserGranted: false,
        contactPermOsAuthorizationStatus: 0,
    };
}
export const BillboardSignals = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.emailVerified === true) {
            writer.uint32(8).bool(message.emailVerified);
        }
        if (message.phoneVerified === true) {
            writer.uint32(16).bool(message.phoneVerified);
        }
        if (message.notificationPermGranted === true) {
            writer.uint32(24).bool(message.notificationPermGranted);
        }
        if (message.contactPermGranted === true) {
            writer.uint32(32).bool(message.contactPermGranted);
        }
        if (message.mutualFriendsCount !== 0) {
            writer.uint32(40).int32(message.mutualFriendsCount);
        }
        if (message.groupsCount !== 0) {
            writer.uint32(48).int32(message.groupsCount);
        }
        if (message.hasNonTeamSnapchatConversations === true) {
            writer.uint32(56).bool(message.hasNonTeamSnapchatConversations);
        }
        if (message.emailSet === true) {
            writer.uint32(64).bool(message.emailSet);
        }
        if (message.bitmojiSet === true) {
            writer.uint32(72).bool(message.bitmojiSet);
        }
        if (message.hasAddFriendsRequest === true) {
            writer.uint32(80).bool(message.hasAddFriendsRequest);
        }
        if (message.appLaunchFromPush === true) {
            writer.uint32(88).bool(message.appLaunchFromPush);
        }
        if (message.appLaunchType !== 0) {
            writer.uint32(96).int32(message.appLaunchType);
        }
        if (message.campaignLocalImpressionCount !== 0) {
            writer.uint32(104).int32(message.campaignLocalImpressionCount);
        }
        if (message.campaignLocalLastImpressionTimeSecsToNow !== "0") {
            writer.uint32(112).int64(message.campaignLocalLastImpressionTimeSecsToNow);
        }
        if (message.campaignLocalContinuousDismissCount !== 0) {
            writer.uint32(120).int32(message.campaignLocalContinuousDismissCount);
        }
        if (message.fstNumInAppWarnings !== 0) {
            writer.uint32(128).int32(message.fstNumInAppWarnings);
        }
        if (message.fstShouldChangePassword === true) {
            writer.uint32(136).bool(message.fstShouldChangePassword);
        }
        if (message.audioRecordPermGranted === true) {
            writer.uint32(144).bool(message.audioRecordPermGranted);
        }
        if (message.mutualFriendsWithBirthdayCount !== 0) {
            writer.uint32(152).int32(message.mutualFriendsWithBirthdayCount);
        }
        if (message.campaignLocalDismissCount !== 0) {
            writer.uint32(160).int32(message.campaignLocalDismissCount);
        }
        if (message.memoriesCount !== 0) {
            writer.uint32(168).int32(message.memoriesCount);
        }
        if (message.campaignLocalFirstImpressionTimeSecsToNow !== "0") {
            writer.uint32(176).int64(message.campaignLocalFirstImpressionTimeSecsToNow);
        }
        if (message.campaignLocalClickCount !== 0) {
            writer.uint32(184).int32(message.campaignLocalClickCount);
        }
        if (message.campaignLocalInteractionCount !== 0) {
            writer.uint32(192).int32(message.campaignLocalInteractionCount);
        }
        if (message.campaignLocalLastInteractionTimeSecsToNow !== "0") {
            writer.uint32(200).int64(message.campaignLocalLastInteractionTimeSecsToNow);
        }
        if (message.lockScreenWidgetAppOpenFromPush === true) {
            writer.uint32(208).bool(message.lockScreenWidgetAppOpenFromPush);
        }
        if (message.communityCount !== 0) {
            writer.uint32(216).int32(message.communityCount);
        }
        if (message.campaignLocalFirstClickTimeSecsToNow !== "0") {
            writer.uint32(224).int64(message.campaignLocalFirstClickTimeSecsToNow);
        }
        if (message.campaignLocalLastClickTimeSecsToNow !== "0") {
            writer.uint32(232).int64(message.campaignLocalLastClickTimeSecsToNow);
        }
        if (message.campaignLocalFirstDismissTimeSecsToNow !== "0") {
            writer.uint32(240).int64(message.campaignLocalFirstDismissTimeSecsToNow);
        }
        if (message.campaignLocalLastDismissTimeSecsToNow !== "0") {
            writer.uint32(248).int64(message.campaignLocalLastDismissTimeSecsToNow);
        }
        if (message.campaignLocalFirstInteractionTimeSecsToNow !== "0") {
            writer.uint32(256).int64(message.campaignLocalFirstInteractionTimeSecsToNow);
        }
        if (message.serverImpressionCount !== 0) {
            writer.uint32(264).int32(message.serverImpressionCount);
        }
        if (message.serverClickCount !== 0) {
            writer.uint32(272).int32(message.serverClickCount);
        }
        if (message.serverDismissCount !== 0) {
            writer.uint32(280).int32(message.serverDismissCount);
        }
        if (message.serverInteractionCount !== 0) {
            writer.uint32(288).int32(message.serverInteractionCount);
        }
        if (message.serverFirstImpressionTimeSecsToNow !== "0") {
            writer.uint32(296).int64(message.serverFirstImpressionTimeSecsToNow);
        }
        if (message.serverLastImpressionTimeSecsToNow !== "0") {
            writer.uint32(304).int64(message.serverLastImpressionTimeSecsToNow);
        }
        if (message.serverFirstClickTimeSecsToNow !== "0") {
            writer.uint32(312).int64(message.serverFirstClickTimeSecsToNow);
        }
        if (message.serverLastClickTimeSecsToNow !== "0") {
            writer.uint32(320).int64(message.serverLastClickTimeSecsToNow);
        }
        if (message.serverFirstDismissTimeSecsToNow !== "0") {
            writer.uint32(328).int64(message.serverFirstDismissTimeSecsToNow);
        }
        if (message.serverLastDismissTimeSecsToNow !== "0") {
            writer.uint32(336).int64(message.serverLastDismissTimeSecsToNow);
        }
        if (message.serverFirstInteractionTimeSecsToNow !== "0") {
            writer.uint32(344).int64(message.serverFirstInteractionTimeSecsToNow);
        }
        if (message.serverLastInteractionTimeSecsToNow !== "0") {
            writer.uint32(352).int64(message.serverLastInteractionTimeSecsToNow);
        }
        if (message.serverContinuousDismissCount !== 0) {
            writer.uint32(360).int32(message.serverContinuousDismissCount);
        }
        if (message.contactPermOsGranted === true) {
            writer.uint32(368).bool(message.contactPermOsGranted);
        }
        if (message.contactPermUserGranted === true) {
            writer.uint32(376).bool(message.contactPermUserGranted);
        }
        if (message.contactPermOsAuthorizationStatus !== 0) {
            writer.uint32(384).int32(message.contactPermOsAuthorizationStatus);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseBillboardSignals();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.emailVerified = reader.bool();
                    break;
                case 2:
                    message.phoneVerified = reader.bool();
                    break;
                case 3:
                    message.notificationPermGranted = reader.bool();
                    break;
                case 4:
                    message.contactPermGranted = reader.bool();
                    break;
                case 5:
                    message.mutualFriendsCount = reader.int32();
                    break;
                case 6:
                    message.groupsCount = reader.int32();
                    break;
                case 7:
                    message.hasNonTeamSnapchatConversations = reader.bool();
                    break;
                case 8:
                    message.emailSet = reader.bool();
                    break;
                case 9:
                    message.bitmojiSet = reader.bool();
                    break;
                case 10:
                    message.hasAddFriendsRequest = reader.bool();
                    break;
                case 11:
                    message.appLaunchFromPush = reader.bool();
                    break;
                case 12:
                    message.appLaunchType = reader.int32();
                    break;
                case 13:
                    message.campaignLocalImpressionCount = reader.int32();
                    break;
                case 14:
                    message.campaignLocalLastImpressionTimeSecsToNow = longToString(reader.int64());
                    break;
                case 15:
                    message.campaignLocalContinuousDismissCount = reader.int32();
                    break;
                case 16:
                    message.fstNumInAppWarnings = reader.int32();
                    break;
                case 17:
                    message.fstShouldChangePassword = reader.bool();
                    break;
                case 18:
                    message.audioRecordPermGranted = reader.bool();
                    break;
                case 19:
                    message.mutualFriendsWithBirthdayCount = reader.int32();
                    break;
                case 20:
                    message.campaignLocalDismissCount = reader.int32();
                    break;
                case 21:
                    message.memoriesCount = reader.int32();
                    break;
                case 22:
                    message.campaignLocalFirstImpressionTimeSecsToNow = longToString(reader.int64());
                    break;
                case 23:
                    message.campaignLocalClickCount = reader.int32();
                    break;
                case 24:
                    message.campaignLocalInteractionCount = reader.int32();
                    break;
                case 25:
                    message.campaignLocalLastInteractionTimeSecsToNow = longToString(reader.int64());
                    break;
                case 26:
                    message.lockScreenWidgetAppOpenFromPush = reader.bool();
                    break;
                case 27:
                    message.communityCount = reader.int32();
                    break;
                case 28:
                    message.campaignLocalFirstClickTimeSecsToNow = longToString(reader.int64());
                    break;
                case 29:
                    message.campaignLocalLastClickTimeSecsToNow = longToString(reader.int64());
                    break;
                case 30:
                    message.campaignLocalFirstDismissTimeSecsToNow = longToString(reader.int64());
                    break;
                case 31:
                    message.campaignLocalLastDismissTimeSecsToNow = longToString(reader.int64());
                    break;
                case 32:
                    message.campaignLocalFirstInteractionTimeSecsToNow = longToString(reader.int64());
                    break;
                case 33:
                    message.serverImpressionCount = reader.int32();
                    break;
                case 34:
                    message.serverClickCount = reader.int32();
                    break;
                case 35:
                    message.serverDismissCount = reader.int32();
                    break;
                case 36:
                    message.serverInteractionCount = reader.int32();
                    break;
                case 37:
                    message.serverFirstImpressionTimeSecsToNow = longToString(reader.int64());
                    break;
                case 38:
                    message.serverLastImpressionTimeSecsToNow = longToString(reader.int64());
                    break;
                case 39:
                    message.serverFirstClickTimeSecsToNow = longToString(reader.int64());
                    break;
                case 40:
                    message.serverLastClickTimeSecsToNow = longToString(reader.int64());
                    break;
                case 41:
                    message.serverFirstDismissTimeSecsToNow = longToString(reader.int64());
                    break;
                case 42:
                    message.serverLastDismissTimeSecsToNow = longToString(reader.int64());
                    break;
                case 43:
                    message.serverFirstInteractionTimeSecsToNow = longToString(reader.int64());
                    break;
                case 44:
                    message.serverLastInteractionTimeSecsToNow = longToString(reader.int64());
                    break;
                case 45:
                    message.serverContinuousDismissCount = reader.int32();
                    break;
                case 46:
                    message.contactPermOsGranted = reader.bool();
                    break;
                case 47:
                    message.contactPermUserGranted = reader.bool();
                    break;
                case 48:
                    message.contactPermOsAuthorizationStatus = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromPartial(object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23;
        const message = createBaseBillboardSignals();
        message.emailVerified = (_a = object.emailVerified) !== null && _a !== void 0 ? _a : false;
        message.phoneVerified = (_b = object.phoneVerified) !== null && _b !== void 0 ? _b : false;
        message.notificationPermGranted = (_c = object.notificationPermGranted) !== null && _c !== void 0 ? _c : false;
        message.contactPermGranted = (_d = object.contactPermGranted) !== null && _d !== void 0 ? _d : false;
        message.mutualFriendsCount = (_e = object.mutualFriendsCount) !== null && _e !== void 0 ? _e : 0;
        message.groupsCount = (_f = object.groupsCount) !== null && _f !== void 0 ? _f : 0;
        message.hasNonTeamSnapchatConversations = (_g = object.hasNonTeamSnapchatConversations) !== null && _g !== void 0 ? _g : false;
        message.emailSet = (_h = object.emailSet) !== null && _h !== void 0 ? _h : false;
        message.bitmojiSet = (_j = object.bitmojiSet) !== null && _j !== void 0 ? _j : false;
        message.hasAddFriendsRequest = (_k = object.hasAddFriendsRequest) !== null && _k !== void 0 ? _k : false;
        message.appLaunchFromPush = (_l = object.appLaunchFromPush) !== null && _l !== void 0 ? _l : false;
        message.appLaunchType = (_m = object.appLaunchType) !== null && _m !== void 0 ? _m : 0;
        message.campaignLocalImpressionCount = (_o = object.campaignLocalImpressionCount) !== null && _o !== void 0 ? _o : 0;
        message.campaignLocalLastImpressionTimeSecsToNow = (_p = object.campaignLocalLastImpressionTimeSecsToNow) !== null && _p !== void 0 ? _p : "0";
        message.campaignLocalContinuousDismissCount = (_q = object.campaignLocalContinuousDismissCount) !== null && _q !== void 0 ? _q : 0;
        message.fstNumInAppWarnings = (_r = object.fstNumInAppWarnings) !== null && _r !== void 0 ? _r : 0;
        message.fstShouldChangePassword = (_s = object.fstShouldChangePassword) !== null && _s !== void 0 ? _s : false;
        message.audioRecordPermGranted = (_t = object.audioRecordPermGranted) !== null && _t !== void 0 ? _t : false;
        message.mutualFriendsWithBirthdayCount = (_u = object.mutualFriendsWithBirthdayCount) !== null && _u !== void 0 ? _u : 0;
        message.campaignLocalDismissCount = (_v = object.campaignLocalDismissCount) !== null && _v !== void 0 ? _v : 0;
        message.memoriesCount = (_w = object.memoriesCount) !== null && _w !== void 0 ? _w : 0;
        message.campaignLocalFirstImpressionTimeSecsToNow = (_x = object.campaignLocalFirstImpressionTimeSecsToNow) !== null && _x !== void 0 ? _x : "0";
        message.campaignLocalClickCount = (_y = object.campaignLocalClickCount) !== null && _y !== void 0 ? _y : 0;
        message.campaignLocalInteractionCount = (_z = object.campaignLocalInteractionCount) !== null && _z !== void 0 ? _z : 0;
        message.campaignLocalLastInteractionTimeSecsToNow = (_0 = object.campaignLocalLastInteractionTimeSecsToNow) !== null && _0 !== void 0 ? _0 : "0";
        message.lockScreenWidgetAppOpenFromPush = (_1 = object.lockScreenWidgetAppOpenFromPush) !== null && _1 !== void 0 ? _1 : false;
        message.communityCount = (_2 = object.communityCount) !== null && _2 !== void 0 ? _2 : 0;
        message.campaignLocalFirstClickTimeSecsToNow = (_3 = object.campaignLocalFirstClickTimeSecsToNow) !== null && _3 !== void 0 ? _3 : "0";
        message.campaignLocalLastClickTimeSecsToNow = (_4 = object.campaignLocalLastClickTimeSecsToNow) !== null && _4 !== void 0 ? _4 : "0";
        message.campaignLocalFirstDismissTimeSecsToNow = (_5 = object.campaignLocalFirstDismissTimeSecsToNow) !== null && _5 !== void 0 ? _5 : "0";
        message.campaignLocalLastDismissTimeSecsToNow = (_6 = object.campaignLocalLastDismissTimeSecsToNow) !== null && _6 !== void 0 ? _6 : "0";
        message.campaignLocalFirstInteractionTimeSecsToNow = (_7 = object.campaignLocalFirstInteractionTimeSecsToNow) !== null && _7 !== void 0 ? _7 : "0";
        message.serverImpressionCount = (_8 = object.serverImpressionCount) !== null && _8 !== void 0 ? _8 : 0;
        message.serverClickCount = (_9 = object.serverClickCount) !== null && _9 !== void 0 ? _9 : 0;
        message.serverDismissCount = (_10 = object.serverDismissCount) !== null && _10 !== void 0 ? _10 : 0;
        message.serverInteractionCount = (_11 = object.serverInteractionCount) !== null && _11 !== void 0 ? _11 : 0;
        message.serverFirstImpressionTimeSecsToNow = (_12 = object.serverFirstImpressionTimeSecsToNow) !== null && _12 !== void 0 ? _12 : "0";
        message.serverLastImpressionTimeSecsToNow = (_13 = object.serverLastImpressionTimeSecsToNow) !== null && _13 !== void 0 ? _13 : "0";
        message.serverFirstClickTimeSecsToNow = (_14 = object.serverFirstClickTimeSecsToNow) !== null && _14 !== void 0 ? _14 : "0";
        message.serverLastClickTimeSecsToNow = (_15 = object.serverLastClickTimeSecsToNow) !== null && _15 !== void 0 ? _15 : "0";
        message.serverFirstDismissTimeSecsToNow = (_16 = object.serverFirstDismissTimeSecsToNow) !== null && _16 !== void 0 ? _16 : "0";
        message.serverLastDismissTimeSecsToNow = (_17 = object.serverLastDismissTimeSecsToNow) !== null && _17 !== void 0 ? _17 : "0";
        message.serverFirstInteractionTimeSecsToNow = (_18 = object.serverFirstInteractionTimeSecsToNow) !== null && _18 !== void 0 ? _18 : "0";
        message.serverLastInteractionTimeSecsToNow = (_19 = object.serverLastInteractionTimeSecsToNow) !== null && _19 !== void 0 ? _19 : "0";
        message.serverContinuousDismissCount = (_20 = object.serverContinuousDismissCount) !== null && _20 !== void 0 ? _20 : 0;
        message.contactPermOsGranted = (_21 = object.contactPermOsGranted) !== null && _21 !== void 0 ? _21 : false;
        message.contactPermUserGranted = (_22 = object.contactPermUserGranted) !== null && _22 !== void 0 ? _22 : false;
        message.contactPermOsAuthorizationStatus = (_23 = object.contactPermOsAuthorizationStatus) !== null && _23 !== void 0 ? _23 : 0;
        return message;
    },
};
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== Long) {
    _m0.util.Long = Long;
    _m0.configure();
}
//# sourceMappingURL=billboard_provided_signals.js.map