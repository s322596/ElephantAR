import Long from "long";
import _m0 from "protobufjs/minimal";
export const protobufPackage = "snapchat.content";
export var VideoDescription_MediaQualityType;
(function (VideoDescription_MediaQualityType) {
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_UNKNOWN"] = 0] = "MEDIA_QUALITY_TYPE_UNKNOWN";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_1"] = 100] = "MEDIA_QUALITY_TYPE_LEVEL_1";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_2"] = 200] = "MEDIA_QUALITY_TYPE_LEVEL_2";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_3"] = 300] = "MEDIA_QUALITY_TYPE_LEVEL_3";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_4"] = 400] = "MEDIA_QUALITY_TYPE_LEVEL_4";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_5"] = 500] = "MEDIA_QUALITY_TYPE_LEVEL_5";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_6"] = 600] = "MEDIA_QUALITY_TYPE_LEVEL_6";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_7"] = 700] = "MEDIA_QUALITY_TYPE_LEVEL_7";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_MAX"] = 5000] = "MEDIA_QUALITY_TYPE_LEVEL_MAX";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_4_5"] = 450] = "MEDIA_QUALITY_TYPE_LEVEL_4_5";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_2_1"] = 210] = "MEDIA_QUALITY_TYPE_LEVEL_2_1";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_2_2"] = 220] = "MEDIA_QUALITY_TYPE_LEVEL_2_2";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_2_5"] = 250] = "MEDIA_QUALITY_TYPE_LEVEL_2_5";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_3_2"] = 320] = "MEDIA_QUALITY_TYPE_LEVEL_3_2";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_3_5"] = 350] = "MEDIA_QUALITY_TYPE_LEVEL_3_5";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_2_7"] = 270] = "MEDIA_QUALITY_TYPE_LEVEL_2_7";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["MEDIA_QUALITY_TYPE_LEVEL_6_5"] = 650] = "MEDIA_QUALITY_TYPE_LEVEL_6_5";
    VideoDescription_MediaQualityType[VideoDescription_MediaQualityType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(VideoDescription_MediaQualityType || (VideoDescription_MediaQualityType = {}));
export var VideoDescription_VideoPlaybackType;
(function (VideoDescription_VideoPlaybackType) {
    VideoDescription_VideoPlaybackType[VideoDescription_VideoPlaybackType["UNKNOWN_VIDEO_PLAYBACK_TYPE"] = 0] = "UNKNOWN_VIDEO_PLAYBACK_TYPE";
    VideoDescription_VideoPlaybackType[VideoDescription_VideoPlaybackType["FASTSTART_DISABLED"] = 1] = "FASTSTART_DISABLED";
    VideoDescription_VideoPlaybackType[VideoDescription_VideoPlaybackType["FASTSTART_ENABLED"] = 2] = "FASTSTART_ENABLED";
    VideoDescription_VideoPlaybackType[VideoDescription_VideoPlaybackType["HTTP_STREAMING_DASH"] = 3] = "HTTP_STREAMING_DASH";
    VideoDescription_VideoPlaybackType[VideoDescription_VideoPlaybackType["HTTP_STREAMING_HLS"] = 4] = "HTTP_STREAMING_HLS";
    VideoDescription_VideoPlaybackType[VideoDescription_VideoPlaybackType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(VideoDescription_VideoPlaybackType || (VideoDescription_VideoPlaybackType = {}));
export var MediaReference_ClaimBehavior;
(function (MediaReference_ClaimBehavior) {
    MediaReference_ClaimBehavior[MediaReference_ClaimBehavior["CAN_EXTEND_MEDIA_CLAIM"] = 0] = "CAN_EXTEND_MEDIA_CLAIM";
    MediaReference_ClaimBehavior[MediaReference_ClaimBehavior["DO_NOT_CLAIM"] = 1] = "DO_NOT_CLAIM";
    MediaReference_ClaimBehavior[MediaReference_ClaimBehavior["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(MediaReference_ClaimBehavior || (MediaReference_ClaimBehavior = {}));
function createBaseVideoDescription() {
    return { mediaQualityType: 0, videoPlaybackType: 0 };
}
export const VideoDescription = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.mediaQualityType !== 0) {
            writer.uint32(16).int32(message.mediaQualityType);
        }
        if (message.videoPlaybackType !== 0) {
            writer.uint32(8).int32(message.videoPlaybackType);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseVideoDescription();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 2:
                    message.mediaQualityType = reader.int32();
                    break;
                case 1:
                    message.videoPlaybackType = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromPartial(object) {
        var _a, _b;
        const message = createBaseVideoDescription();
        message.mediaQualityType = (_a = object.mediaQualityType) !== null && _a !== void 0 ? _a : 0;
        message.videoPlaybackType = (_b = object.videoPlaybackType) !== null && _b !== void 0 ? _b : 0;
        return message;
    },
};
function createBaseMediaReference() {
    return {
        mediaListId: "0",
        claimBehavior: 0,
        url: "",
        contentObject: new Uint8Array(),
        localContentKey: "",
        localCacheKey: "",
        videoDescription: undefined,
        mediaType: 0,
    };
}
export const MediaReference = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.mediaListId !== "0") {
            writer.uint32(48).int64(message.mediaListId);
        }
        if (message.claimBehavior !== 0) {
            writer.uint32(56).int32(message.claimBehavior);
        }
        if (message.url !== "") {
            writer.uint32(18).string(message.url);
        }
        if (message.contentObject.length !== 0) {
            writer.uint32(26).bytes(message.contentObject);
        }
        if (message.localContentKey !== "") {
            writer.uint32(74).string(message.localContentKey);
        }
        if (message.localCacheKey !== "") {
            writer.uint32(82).string(message.localCacheKey);
        }
        if (message.videoDescription !== undefined) {
            VideoDescription.encode(message.videoDescription, writer.uint32(42).fork()).ldelim();
        }
        if (message.mediaType !== 0) {
            writer.uint32(64).int32(message.mediaType);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMediaReference();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 6:
                    message.mediaListId = longToString(reader.int64());
                    break;
                case 7:
                    message.claimBehavior = reader.int32();
                    break;
                case 2:
                    message.url = reader.string();
                    break;
                case 3:
                    message.contentObject = reader.bytes();
                    break;
                case 9:
                    message.localContentKey = reader.string();
                    break;
                case 10:
                    message.localCacheKey = reader.string();
                    break;
                case 5:
                    message.videoDescription = VideoDescription.decode(reader, reader.uint32());
                    break;
                case 8:
                    message.mediaType = reader.int32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromPartial(object) {
        var _a, _b, _c, _d, _e, _f, _g;
        const message = createBaseMediaReference();
        message.mediaListId = (_a = object.mediaListId) !== null && _a !== void 0 ? _a : "0";
        message.claimBehavior = (_b = object.claimBehavior) !== null && _b !== void 0 ? _b : 0;
        message.url = (_c = object.url) !== null && _c !== void 0 ? _c : "";
        message.contentObject = (_d = object.contentObject) !== null && _d !== void 0 ? _d : new Uint8Array();
        message.localContentKey = (_e = object.localContentKey) !== null && _e !== void 0 ? _e : "";
        message.localCacheKey = (_f = object.localCacheKey) !== null && _f !== void 0 ? _f : "";
        message.videoDescription =
            object.videoDescription !== undefined && object.videoDescription !== null
                ? VideoDescription.fromPartial(object.videoDescription)
                : undefined;
        message.mediaType = (_g = object.mediaType) !== null && _g !== void 0 ? _g : 0;
        return message;
    },
};
function longToString(long) {
    return long.toString();
}
if (_m0.util.Long !== Long) {
    _m0.util.Long = Long;
    _m0.configure();
}
//# sourceMappingURL=media_reference.js.map